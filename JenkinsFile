pipeline {
    agent any
    
    environment {
        SCANNER_HOME = tool 'sonar-scanner'
    }

    stages {
        stage('Git') {
            steps {
                git branch: 'main', changelog: false, credentialsId: 'a6ba30b2-8feb-4137-9f48-d0c39b21f9b6', poll: false, url: 'https://github.com/zak-bahi01/test_repo.git'
            }
        }
        
        stage('Sonarqube Analysis') {
            steps {
                withSonarQubeEnv('sonar') {
                    bat " ${SCANNER_HOME}/bin/sonar-scanner -D sonar.projectKey=Test -D sonar.projectName=Test "
                    
                }
            }
        }
        
        stage('Approval') {
            steps {
                script {
                    mail (to: 'zakbahi1@gmail.com',
                    subject: "Job '${env.JOB_BASE_NAME}' (${env.BUILD_NUMBER}) is waiting for input",
                    body: "Please go to console output of ${env.BUILD_URL} to approve or Reject.");
                    def userInput = input(id: 'userInput', message: 'Sonarqube Analysis completed, do you want to continue?', ok: 'Yes')
                }
            }
        }
        
        stage('Docker Build') {
            steps {
                script {
                    bat " docker build -t myapp ."
                }
            }
        }
        
        stage('Docker Push') {
            steps {
                script {
                    docker.withRegistry('https://index.docker.io/v1/', 'docker-repo'){
                        bat " docker tag myapp bahizak01/jenkins_test:latest"
                        bat " docker push bahizak01/jenkins_test:latest"
                    }
                }
            }
        }
        
        stage('Trivy Scan Image') {
            steps {
                script {
                    bat "trivy image -f json -o scan.json bahizak01/jenkins_test:latest"
                }
            }
        }
        
        stage('Deploy to minikube') {
            steps {
                withKubeConfig(caCertificate: '', clusterName: '', contextName: '', credentialsId: 'kubernetes', namespace: 'jenkins', restrictKubeConfigAccess: false, serverUrl: 'https://127.0.0.1:53539') {
                    bat "kubectl apply -f init-config.yaml"
                    bat "kubectl apply -f data-volume.yaml"
                    bat "kubectl apply -f db-deployment.yaml"
                    bat "kubectl apply -f app-deployment.yaml"
                    
                }
            }
        }
            
        

        
    }   
}
